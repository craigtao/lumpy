import os;

env = Environment(
#   CXX         = 'clang++',
    CPPPATH     = ['.'],
    CCFLAGS     = '-D_LUMPY_BUILD_ ',
    CXXFLAGS    = '--std=c++14 -Wall ')

config          = ARGUMENTS.get('config')

if (config == 'release'):
    env.Append(CCFLAGS = '-O3 -DNDEBUG')
else:
    env.Append(CCFLAGS = '-g -O0')

if env['PLATFORM'] != 'win32':
   env['ENV']['TERM'] = os.environ['TERM']
   
lumpy_libs      = []
if env['PLATFORM'] == 'posix':  # linux
    lumpy_libs  = lumpy_libs + ['pthread']


lumpy_src       = [Glob('lumpy/*.cc'), Glob('lumpy/*/*.cc', exclude=('lumpy/cuda/*.cc'))]
lumpy_lib       = env.Library('lib/lumpy', lumpy_src, LIBS=lumpy_libs)

unittest_src    = [Glob('unittest/*.cc'), Glob('unittest/*/*.cc')]
unittest_app    = env.Program('bin/lumpy.unittest', unittest_src, LIBS=lumpy_libs+[lumpy_lib])
